name: build
run-name: build on github
on:
  push:
    paths:
      - 'VERSION'


env:
  REPO_URL: https://github.com/kalous12/action_test.git
  REPO_BRANCH: main
  TZ: Asia/Shanghai

  
jobs:

  Build:
    runs-on: ubuntu-22.04
    timeout-minutes: 1440
    steps:
      
    - name: Checkout
      uses: actions/checkout@v3

    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        free -h
        uname -a
        [ -f /proc/version ] && cat /proc/version
        [ -f /etc/issue.net ] && cat /etc/issue.net
        [ -f /etc/issue ] && cat /etc/issue
        ulimit -a    

    - name: Clone Source Code
      run: |
        echo "---------------"
        pwd
        echo "---------------"
        df -hT $PWD
        echo "---------------"
        git clone $REPO_URL
        echo "---------------"
        pwd
        echo "---------------"

    - name: dependecy
      run: |
        apt install tree

    - name: complie
      run: |
        pwd
        cd src
        ls -l
        ./build.sh
        ls -l
        mkdir ~/touch
        mv * ~/touch
        cd ~
        ls -l
        echo "FIRMWARE=~/touch" >> $GITHUB_ENV
      
    - name: Generate release
      id: tag
      run: |
          echo "release_tag=$(cat VERSION)" >> $GITHUB_OUTPUT
          echo "release_date=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
          touch release.txt
          echo "test" >> release.txt
          echo "status=success" >> $GITHUB_OUTPUT
        
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          name: ${{ steps.tag.outputs.release_date }} DoorNet_linux-5.4_固件下载
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
          retain_days: 1
          keep_minimum_runs: 1

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
          keep_latest: 20
          delete_tags: true
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete Artifacts
      uses: geekyeggo/delete-artifact@v2
      with:
         name: |
            bin-archive
        
       
